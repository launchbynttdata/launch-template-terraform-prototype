{{ license_header }}

{% if "reference" in terraform_module_type -%}
data "aws_region" "current" {}

module "resource_names" {
  source  = "terraform.registry.launch.nttdata.com/module_library/resource_name/launch"
  version = "~> 2.0"

  for_each = var.resource_names_map

  region                  = join("", split("-", data.aws_region.current.name))
  class_env               = var.class_env
  cloud_resource_type     = each.value.name
  instance_env            = var.instance_env
  instance_resource       = var.instance_resource
  maximum_length          = each.value.max_length
  logical_product_family  = var.logical_product_family
  logical_product_service = var.logical_product_service
}
{% endif -%}

{% if "hashicorp/aws" in terraform_provider -%}
resource "aws_s3_bucket" "example" {
  bucket = {% if "reference" in terraform_module_type %}module.resource_names["example"].resource_name{% else %}var.bucket_name{% endif %}

  tags = local.tags
}
{% elif "hashicorp/azure" in terraform_provider -%}
resource "azurerm_storage_account" "example" {
  name                     = module.resource_names["example"].resource_name
  resource_group_name      = var.resource_group_name
  location                 = var.location
  account_tier             = "Standard"
  account_replication_type = "LRS"

  tags = local.tags
}
{% elif "microsoft/azuredevops" in terraform_provider -%}
{% else -%}
resource "resource_type" "resource_name" {
  name = module.resource_names["example"][resource_name_strategy]

  tags = local.tags
}
{% endif %}