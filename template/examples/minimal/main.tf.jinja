{{ license_header }}

{% if "reference" not in terraform_module_type %}
module "resource_names" {
  source  = "terraform.registry.launch.nttdata.com/module_library/resource_name/launch"
  version = "~> 2.0"

  for_each = var.resource_names_map

  region                  = join("", split("-", each.value.region))
  class_env               = var.class_env
  cloud_resource_type     = each.value.name
  instance_env            = var.instance_env
  instance_resource       = var.instance_resource
  maximum_length          = each.value.max_length
  logical_product_family  = var.logical_product_family
  logical_product_service = var.logical_product_service
}

{%  if "hashicorp/azurerm" in terraform_provider %}
module "resource_group" {
  source  = "terraform.registry.launch.nttdata.com/module_primitive/resource_group/azurerm"
  version = "~> 1.0"

  name     = module.resource_names["resource_group"].minimal_random_suffix
  location = "{{ terraform_provider_default_region }}"
  tags     = local.tags
}
{%  else %}
{%  endif %}
{% endif %}

module "parent" {
  source = "../.."

  # Populate source inputs here...
  tags = local.tags
{% if "reference" in terraform_module_type %}
  class_env = var.class_env
  instance_env = var.instance_env
  instance_resource = var.instance_resource
  logical_product_family = var.logical_product_family
  logical_product_service = var.logical_product_service
  resource_names_strategy = "minimal_random_suffix"
{% elif "hashicorp/aws" in terraform_provider %}
  bucket_name = module.resource_names["example"].minimal_random_suffix
{% elif "hashicorp/azurerm" in terraform_provider %}
  storage_account_name = module.resource_names["example"].minimal_random_suffix
  resource_group_name = module.resource_group.name
{% endif %}
}
